// Generated by view binder compiler. Do not edit!
package com.example.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolist.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final DatePicker DateSelector;

  @NonNull
  public final TextView addTitle;

  @NonNull
  public final BottomNavigationView bottomNavigationView;

  @NonNull
  public final Button btnAddTask;

  @NonNull
  public final TextView editTextDate;

  @NonNull
  public final EditText inputTaskDescription;

  @NonNull
  public final EditText inputTaskTitle;

  private ActivityAddBinding(@NonNull ConstraintLayout rootView, @NonNull DatePicker DateSelector,
      @NonNull TextView addTitle, @NonNull BottomNavigationView bottomNavigationView,
      @NonNull Button btnAddTask, @NonNull TextView editTextDate,
      @NonNull EditText inputTaskDescription, @NonNull EditText inputTaskTitle) {
    this.rootView = rootView;
    this.DateSelector = DateSelector;
    this.addTitle = addTitle;
    this.bottomNavigationView = bottomNavigationView;
    this.btnAddTask = btnAddTask;
    this.editTextDate = editTextDate;
    this.inputTaskDescription = inputTaskDescription;
    this.inputTaskTitle = inputTaskTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DateSelector;
      DatePicker DateSelector = ViewBindings.findChildViewById(rootView, id);
      if (DateSelector == null) {
        break missingId;
      }

      id = R.id.addTitle;
      TextView addTitle = ViewBindings.findChildViewById(rootView, id);
      if (addTitle == null) {
        break missingId;
      }

      id = R.id.bottomNavigationView;
      BottomNavigationView bottomNavigationView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationView == null) {
        break missingId;
      }

      id = R.id.btnAddTask;
      Button btnAddTask = ViewBindings.findChildViewById(rootView, id);
      if (btnAddTask == null) {
        break missingId;
      }

      id = R.id.editTextDate;
      TextView editTextDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.inputTaskDescription;
      EditText inputTaskDescription = ViewBindings.findChildViewById(rootView, id);
      if (inputTaskDescription == null) {
        break missingId;
      }

      id = R.id.inputTaskTitle;
      EditText inputTaskTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputTaskTitle == null) {
        break missingId;
      }

      return new ActivityAddBinding((ConstraintLayout) rootView, DateSelector, addTitle,
          bottomNavigationView, btnAddTask, editTextDate, inputTaskDescription, inputTaskTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
